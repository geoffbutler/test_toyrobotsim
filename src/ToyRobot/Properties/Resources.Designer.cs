//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToyRobot.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ToyRobot.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Sorry I don&apos;t understand that command.
        /// </summary>
        internal static string ErrorInvalidCommandMessage {
            get {
                return ResourceManager.GetString("ErrorInvalidCommandMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Invalid PLACE command: F must be one of these words: NORTH, SOUTH, EAST or WEST.
        /// </summary>
        internal static string ErrorInvalidPlaceCommandFUnparsable {
            get {
                return ResourceManager.GetString("ErrorInvalidPlaceCommandFUnparsable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Invalid PLACE command: The syntax for PLACE is:
        ///&apos;PLACE X,Y,F&apos; - X = a number from {0} to {1}, Y = a number from {2} to {3}, F = direction to face (NORTH/SOUTH/EAST/WEST).
        /// </summary>
        internal static string ErrorInvalidPlaceCommandSyntaxFormat {
            get {
                return ResourceManager.GetString("ErrorInvalidPlaceCommandSyntaxFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Invalid PLACE command: That X value is not on the board: X must be a number from {0} to {1}.
        /// </summary>
        internal static string ErrorInvalidPlaceCommandXOutOfRangeFormat {
            get {
                return ResourceManager.GetString("ErrorInvalidPlaceCommandXOutOfRangeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Invalid PLACE command: X must be a valid number from {0} to {1}.
        /// </summary>
        internal static string ErrorInvalidPlaceCommandXUnparsableFormat {
            get {
                return ResourceManager.GetString("ErrorInvalidPlaceCommandXUnparsableFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Invalid PLACE command: That Y value is not on the board: Y must be a number from {0} to {1}.
        /// </summary>
        internal static string ErrorInvalidPlaceCommandYOutOfRangeFormat {
            get {
                return ResourceManager.GetString("ErrorInvalidPlaceCommandYOutOfRangeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Invalid PLACE command: Y must be a valid number from {0} to {1}.
        /// </summary>
        internal static string ErrorInvalidPlaceCommandYUnparsableFormat {
            get {
                return ResourceManager.GetString("ErrorInvalidPlaceCommandYUnparsableFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: You must first PLACE the robot:
        ///&apos;PLACE X,Y,F&apos; - X = a number from {0} to {1}, Y = a number from {2} to {3}, F = direction to face (NORTH/SOUTH/EAST/WEST).
        /// </summary>
        internal static string ErrorNotPlacedMessageFormat {
            get {
                return ResourceManager.GetString("ErrorNotPlacedMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to Toy Robot Simulator
        ///
        ///The simlulator allows you to control a robot on a {0} by {1} grid.
        ///
        ///The following commands can be used to control the robot: 
        ///&apos;PLACE X,Y,F&apos; - X = a number from {2} to {3}, Y = a number from {4} to {5}, F = direction to face (NORTH/SOUTH/EAST/WEST)
        ///&apos;MOVE&apos; - move forward one square
        ///&apos;LEFT&apos; - turn left
        ///&apos;RIGHT&apos; - turn right
        ///&apos;REPORT&apos; - report current position and direction facing
        ///
        ///You must use the PLACE command first to set the starting position of the robot.
        ///
        ///Press en [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WelcomeMessageFormat {
            get {
                return ResourceManager.GetString("WelcomeMessageFormat", resourceCulture);
            }
        }
    }
}
